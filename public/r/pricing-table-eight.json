{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pricing-table-eight",
  "type": "registry:block",
  "title": "Pricing Table Eight",
  "description": "Feature-comparison pricing table with aligned cards and user slider",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "registryDependencies": [
    "button",
    "card",
    "badge",
    "slider",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/pricing-table-eight.tsx",
      "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { motion, AnimatePresence } from \"motion/react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Slider } from \"@/components/ui/slider\";\r\nimport { Check, Info } from \"lucide-react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\n// Define variants using CVA\r\nconst sectionVariants = cva(\"py-32\", {\r\n  variants: {\r\n    size: {\r\n      small: \"py-6 md:py-12\",\r\n      medium: \"py-10 md:py-20\", \r\n      large: \"py-16 md:py-32\",\r\n    },\r\n    theme: {\r\n      minimal: \"\",\r\n      classic: \"bg-gradient-to-b from-background to-muted/20 relative overflow-hidden\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    size: \"medium\",\r\n    theme: \"minimal\",\r\n  },\r\n});\r\n\r\nconst titleVariants = cva(\"text-pretty text-center font-bold\", {\r\n  variants: {\r\n    size: {\r\n      small: \"text-3xl lg:text-4xl\",\r\n      medium: \"text-4xl lg:text-5xl\",\r\n      large: \"text-4xl lg:text-6xl\",\r\n    },\r\n    theme: {\r\n      minimal: \"\",\r\n      classic: \"bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    size: \"large\",\r\n    theme: \"minimal\",\r\n  },\r\n});\r\n\r\nconst descriptionVariants = cva(\"text-muted-foreground max-w-2xl mx-auto text-center\", {\r\n  variants: {\r\n    size: {\r\n      small: \"text-base lg:text-lg\",\r\n      medium: \"text-lg lg:text-xl\",\r\n      large: \"lg:text-xl\",\r\n    },\r\n    theme: {\r\n      minimal: \"\",\r\n      classic: \"\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    size: \"large\",\r\n    theme: \"minimal\",\r\n  },\r\n});\r\n\r\nconst cardVariants = cva(\r\n  \"relative cursor-pointer transition-all duration-200 hover:shadow-lg\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        small: \"p-4\",\r\n        medium: \"p-5\",\r\n        large: \"p-6\",\r\n      },\r\n      theme: {\r\n        minimal: \"\",\r\n        classic: \"hover:shadow-xl backdrop-blur-sm bg-card/50 border-border/50\",\r\n      },\r\n      selected: {\r\n        true: \"\",\r\n        false: \"\",\r\n      },\r\n    },\r\n    compoundVariants: [\r\n      {\r\n        theme: \"minimal\",\r\n        selected: true,\r\n        className: \"border-indigo-600 shadow-lg ring-2 ring-indigo-600\",\r\n      },\r\n      {\r\n        theme: \"minimal\", \r\n        selected: false,\r\n        className: \"hover:border-muted-foreground\",\r\n      },\r\n      {\r\n        theme: \"classic\",\r\n        selected: true,\r\n        className: \"border-primary/50 shadow-xl ring-2 ring-primary/20 bg-gradient-to-b from-primary/5 to-transparent\",\r\n      },\r\n      {\r\n        theme: \"classic\",\r\n        selected: false,\r\n        className: \"hover:border-primary/30\",\r\n      },\r\n    ],\r\n    defaultVariants: {\r\n      size: \"large\",\r\n      theme: \"minimal\",\r\n      selected: false,\r\n    },\r\n  }\r\n);\r\n\r\nconst buttonVariants = cva(\r\n  \"w-full transition-all duration-300\",\r\n  {\r\n    variants: {\r\n      theme: {\r\n        minimal: \"\",\r\n        classic: \"relative overflow-hidden bg-gradient-to-r from-primary to-primary/80 text-primary-foreground font-semibold hover:shadow-xl active:scale-95 border border-primary/20\",\r\n      },\r\n      selected: {\r\n        true: \"\",\r\n        false: \"\",\r\n      },\r\n    },\r\n    compoundVariants: [\r\n      {\r\n        theme: \"minimal\",\r\n        selected: true,\r\n        className: \"bg-indigo-600 hover:bg-indigo-700 text-white\",\r\n      },\r\n      {\r\n        theme: \"minimal\",\r\n        selected: false,\r\n        className: \"bg-background border border-border text-foreground hover:bg-muted\",\r\n      },\r\n      {\r\n        theme: \"classic\",\r\n        selected: true,\r\n        className: \"bg-gradient-to-r from-indigo-600 to-indigo-700 text-white\",\r\n      },\r\n      {\r\n        theme: \"classic\",\r\n        selected: false,\r\n        className: \"bg-muted/50 text-muted-foreground hover:bg-muted\",\r\n      },\r\n    ],\r\n    defaultVariants: {\r\n      theme: \"minimal\",\r\n      selected: false,\r\n    },\r\n  }\r\n);\r\n\r\n// TypeScript interfaces\r\nexport interface PricingTableEightPlan {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  users: number | string;\r\n  popular?: boolean;\r\n}\r\n\r\nexport interface FeatureItemRecord {\r\n  name: string;\r\n  tooltip?: boolean;\r\n  [planId: string]: boolean | string | undefined;\r\n}\r\n\r\nexport interface FeatureCategory {\r\n  category: string;\r\n  items: FeatureItemRecord[];\r\n}\r\n\r\nexport interface PricingTableEightProps extends VariantProps<typeof sectionVariants> {\r\n  plans: PricingTableEightPlan[];\r\n  features: FeatureCategory[];\r\n  title?: string;\r\n  description?: string;\r\n  onPlanSelect?: (planId: string) => void;\r\n  className?: string;\r\n}\r\n\r\nexport function PricingTableEight({ \r\n  className,\r\n  plans,\r\n  features,\r\n  title = \"Choose a plan that's right for you\",\r\n  description = \"We believe Untitled should be accessible to all companies, no matter the size of your startup.\",\r\n  onPlanSelect,\r\n  size,\r\n  theme = \"minimal\"\r\n}: PricingTableEightProps) {\r\n  const [selectedPlan, setSelectedPlan] = useState(plans.find(p => p.popular)?.id || plans[0]?.id || \"\");\r\n\r\n  const currentPlan = plans.find((plan) => plan.id === selectedPlan) || plans[0];\r\n  const sliderValue = [typeof currentPlan?.users === \"string\" ? 25 : (currentPlan?.users || 1)];\r\n\r\n  const renderFeatureValue = (value: boolean | string | undefined) => {\r\n    if (typeof value === \"boolean\") {\r\n      return value ? <Check className=\"h-5 w-5 text-indigo-600\" /> : <span className=\"text-muted-foreground\">—</span>;\r\n    }\r\n    if (typeof value === \"string\") {\r\n      return <span className=\"text-sm text-foreground\">{value}</span>;\r\n    }\r\n    return <span className=\"text-muted-foreground\">—</span>;\r\n  };\r\n\r\n  const handlePlanSelect = (planId: string) => {\r\n    setSelectedPlan(planId);\r\n    onPlanSelect?.(planId);\r\n  };\r\n\r\n  return (\r\n    <section className={cn(sectionVariants({ size, theme }), className)}>\r\n      {/* Classic theme background elements */}\r\n      {theme === \"classic\" && (\r\n        <>\r\n          <div className=\"absolute inset-0 bg-grid-pattern opacity-5\" />\r\n          <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-indigo-600/5 rounded-full blur-3xl\" />\r\n          <div className=\"absolute top-1/4 right-1/4 w-64 h-64 bg-indigo-600/5 rounded-full blur-2xl\" />\r\n        </>\r\n      )}\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        {/* Hero Section */}\r\n        <div className=\"text-center\">\r\n          <h1 className={cn(titleVariants({ size, theme }))}>\r\n            {title}\r\n          </h1>\r\n          <p className={cn(descriptionVariants({ size, theme }), \"mt-6\")}>\r\n            {description}\r\n          </p>\r\n        </div>\r\n\r\n        {/* User Slider */}\r\n        <div className=\"mx-auto mt-12 max-w-md\">\r\n          <div className=\"relative\">\r\n            <Slider value={sliderValue} max={25} min={1} step={1} className=\"w-full\" disabled />\r\n            <div className=\"mt-2 text-center\">\r\n              <span className=\"text-sm font-medium text-foreground\">{currentPlan?.users} users</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Pricing Cards */}\r\n        <div className=\"mt-16\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-4 mb-8\">\r\n            <div></div>\r\n            {plans.map((plan) => (\r\n              <motion.div\r\n                key={plan.id}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ duration: 0.3 }}\r\n              >\r\n                <Card\r\n                  className={cn(\r\n                    cardVariants({ \r\n                      size, \r\n                      theme, \r\n                      selected: selectedPlan === plan.id \r\n                    })\r\n                  )}\r\n                  onClick={() => handlePlanSelect(plan.id)}\r\n                >\r\n                  {plan.popular && (\r\n                    <div className=\"absolute -top-3 left-1/2 -translate-x-1/2 z-10\">\r\n                      <Badge className={cn(\r\n                        \"px-4 py-1 text-sm font-medium rounded-md shadow-sm\",\r\n                        theme === \"classic\" \r\n                          ? \"bg-gradient-to-r from-indigo-600 to-indigo-700 text-white border-indigo-600/20\"\r\n                          : \"bg-indigo-600 hover:bg-indigo-700 text-white\"\r\n                      )}>\r\n                        Most popular\r\n                      </Badge>\r\n                    </div>\r\n                  )}\r\n                  <CardHeader className=\"text-center\">\r\n                    <CardTitle className=\"text-lg font-semibold\">{plan.name}</CardTitle>\r\n                    <CardDescription className=\"text-sm text-muted-foreground\">{plan.description}</CardDescription>\r\n                    <div className=\"mt-4\">\r\n                      <span className={cn(\r\n                        \"text-4xl font-bold\",\r\n                        theme === \"classic\" \r\n                          ? \"bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent\"\r\n                          : \"text-foreground\"\r\n                      )}>\r\n                        ${plan.price}\r\n                      </span>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <Button\r\n                      className={cn(\r\n                        buttonVariants({ theme, selected: selectedPlan === plan.id })\r\n                      )}\r\n                    >\r\n                      Get started\r\n                    </Button>\r\n                  </CardContent>\r\n                </Card>\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Feature Comparison Table */}\r\n          <div className=\"overflow-hidden rounded-lg border bg-card\">\r\n            <AnimatePresence mode=\"wait\">\r\n              {features.map((category, categoryIndex) => (\r\n                <motion.div\r\n                  key={category.category}\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  transition={{ duration: 0.3, delay: categoryIndex * 0.1 }}\r\n                >\r\n                  {categoryIndex > 0 && <div className=\"border-t\" />}\r\n\r\n                  {/* Category Header */}\r\n                  <div className=\"bg-muted/50 px-6 py-4\">\r\n                    <h3 className=\"text-sm font-semibold text-foreground\">{category.category}</h3>\r\n                  </div>\r\n\r\n                  {/* Feature Rows */}\r\n                  {category.items.map((feature, featureIndex) => (\r\n                    <div\r\n                      key={feature.name}\r\n                      className={cn(\r\n                        \"grid grid-cols-1 lg:grid-cols-4 gap-4 px-6 py-4\",\r\n                        featureIndex > 0 && \"border-t border-border/50\",\r\n                      )}\r\n                    >\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span className=\"text-sm text-foreground\">{feature.name}</span>\r\n                        {feature.tooltip && <Info className=\"h-4 w-4 text-muted-foreground\" />}\r\n                      </div>\r\n                      {plans.map((plan) => (\r\n                        <div key={plan.id} className=\"flex items-center justify-center\">\r\n                          {renderFeatureValue(feature[plan.id])}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ))}\r\n                </motion.div>\r\n              ))}\r\n            </AnimatePresence>\r\n          </div>\r\n\r\n          {/* Bottom CTA Buttons */}\r\n          <div className=\"mt-8 grid grid-cols-1 lg:grid-cols-4 gap-4\">\r\n            <div></div>\r\n            {plans.map((plan) => (\r\n              <Button\r\n                key={plan.id}\r\n                className={cn(\r\n                  buttonVariants({ theme, selected: selectedPlan === plan.id })\r\n                )}\r\n                onClick={() => handlePlanSelect(plan.id)}\r\n              >\r\n                Get started\r\n              </Button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": "components/billingsdk/pricing-table-eight.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/pricing-table-eight-demo.tsx",
      "content": "\"use client\";\r\n\r\nimport { PricingTableEight } from \"@/components/billingsdk/pricing-table-eight\";\r\n\r\nconst plans = [\r\n  {\r\n    id: \"basic\",\r\n    name: \"Basic plan\",\r\n    description: \"Our most popular plan.\",\r\n    price: 10,\r\n    popular: false,\r\n    users: 5,\r\n  },\r\n  {\r\n    id: \"business\",\r\n    name: \"Business plan\",\r\n    description: \"Best for growing teams.\",\r\n    price: 20,\r\n    popular: true,\r\n    users: 15,\r\n  },\r\n  {\r\n    id: \"enterprise\",\r\n    name: \"Enterprise plan\",\r\n    description: \"Best for large teams.\",\r\n    price: 40,\r\n    popular: false,\r\n    users: \"25+\",\r\n  },\r\n];\r\n\r\nconst features = [\r\n  {\r\n    category: \"Overview\",\r\n    items: [\r\n      {\r\n        name: \"Basic features\",\r\n        tooltip: true,\r\n        basic: true,\r\n        business: true,\r\n        enterprise: true,\r\n      },\r\n      {\r\n        name: \"Users\",\r\n        tooltip: true,\r\n        basic: \"10\",\r\n        business: \"20\",\r\n        enterprise: \"Unlimited\",\r\n      },\r\n      {\r\n        name: \"Individual data\",\r\n        tooltip: true,\r\n        basic: \"20GB\",\r\n        business: \"40GB\",\r\n        enterprise: \"Unlimited\",\r\n      },\r\n      {\r\n        name: \"Support\",\r\n        tooltip: true,\r\n        basic: true,\r\n        business: true,\r\n        enterprise: true,\r\n      },\r\n      {\r\n        name: \"Automated workflows\",\r\n        tooltip: true,\r\n        basic: false,\r\n        business: true,\r\n        enterprise: true,\r\n      },\r\n      {\r\n        name: \"200+ integrations\",\r\n        tooltip: true,\r\n        basic: false,\r\n        business: true,\r\n        enterprise: true,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    category: \"Reporting and analytics\",\r\n    items: [\r\n      {\r\n        name: \"Analytics\",\r\n        tooltip: true,\r\n        basic: \"Basic\",\r\n        business: \"Advanced\",\r\n        enterprise: \"Advanced\",\r\n      },\r\n      {\r\n        name: \"Export reports\",\r\n        tooltip: true,\r\n        basic: true,\r\n        business: true,\r\n        enterprise: true,\r\n      },\r\n      {\r\n        name: \"Scheduled reports\",\r\n        tooltip: true,\r\n        basic: true,\r\n        business: true,\r\n        enterprise: true,\r\n      },\r\n      {\r\n        name: \"API access\",\r\n        tooltip: true,\r\n        basic: false,\r\n        business: true,\r\n        enterprise: true,\r\n      },\r\n      {\r\n        name: \"Advanced reports\",\r\n        tooltip: true,\r\n        basic: false,\r\n        business: true,\r\n        enterprise: true,\r\n      },\r\n      {\r\n        name: \"Saved reports\",\r\n        tooltip: true,\r\n        basic: false,\r\n        business: true,\r\n        enterprise: true,\r\n      },\r\n      {\r\n        name: \"Customer properties\",\r\n        tooltip: true,\r\n        basic: false,\r\n        business: false,\r\n        enterprise: true,\r\n      },\r\n      {\r\n        name: \"Custom fields\",\r\n        tooltip: true,\r\n        basic: false,\r\n        business: false,\r\n        enterprise: true,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    category: \"User access\",\r\n    items: [\r\n      {\r\n        name: \"SSO/SAML authentication\",\r\n        tooltip: true,\r\n        basic: true,\r\n        business: true,\r\n        enterprise: true,\r\n      },\r\n      {\r\n        name: \"Advanced permissions\",\r\n        tooltip: true,\r\n        basic: false,\r\n        business: true,\r\n        enterprise: true,\r\n      },\r\n      {\r\n        name: \"Audit log\",\r\n        tooltip: true,\r\n        basic: false,\r\n        business: false,\r\n        enterprise: true,\r\n      },\r\n      {\r\n        name: \"Data history\",\r\n        tooltip: true,\r\n        basic: false,\r\n        business: false,\r\n        enterprise: true,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport function PricingTableEightDemo() {\r\n  return (\r\n    <PricingTableEight\r\n      plans={plans}\r\n      features={features}\r\n      title=\"Choose a plan that's right for you\"\r\n      description=\"We believe Untitled should be accessible to all companies, no matter the size of your startup.\"\r\n      onPlanSelect={(planId) => console.log(\"Selected plan:\", planId)}\r\n      size=\"medium\"\r\n      theme=\"minimal\"\r\n      className=\"w-full\"\r\n    />\r\n  );\r\n}\r\n",
      "type": "registry:component",
      "target": "components/pricing-table-eight-demo.tsx"
    },
    {
      "path": "src/registry/lib/billingsdk-config.ts",
      "content": "export interface Plan {\r\n    id: string\r\n    title: string\r\n    description: string\r\n    highlight?: boolean\r\n    type?: 'monthly' | 'yearly'\r\n    currency?: string\r\n    monthlyPrice: string\r\n    yearlyPrice: string\r\n    buttonText: string\r\n    badge?: string\r\n    features: {\r\n        name: string\r\n        icon: string\r\n        iconColor?: string\r\n    }[]\r\n}\r\n\r\nexport interface CurrentPlan {\r\n    plan: Plan\r\n    type: 'monthly' | 'yearly' | 'custom'\r\n    price?: string\r\n    nextBillingDate: string\r\n    paymentMethod: string\r\n    status: 'active' | 'inactive' | 'past_due' | 'cancelled'\r\n}\r\n\r\nexport const plans: Plan[] = [\r\n    {\r\n        id: 'starter',\r\n        title: 'Starter',\r\n        description: 'For developers testing out Liveblocks locally.',\r\n        currency: '$',\r\n        monthlyPrice: '0',\r\n        yearlyPrice: '0',\r\n        buttonText: 'Start today for free',\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 'pro',\r\n        title: 'Pro',\r\n        description: 'For companies adding collaboration in production.',\r\n        currency: '$',\r\n        monthlyPrice: '20',\r\n        yearlyPrice: '199',\r\n        buttonText: 'Sign up',\r\n        badge: 'Most popular',\r\n        highlight: true,\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        id: 'enterprise',\r\n        title: 'Enterprise',\r\n        description: 'For organizations that need more support and compliance features.',\r\n        currency: '$',\r\n        monthlyPrice: 'Custom',\r\n        yearlyPrice: 'Custom',\r\n        buttonText: 'Contact sales',\r\n        features: [\r\n            {\r\n                name: 'Presence',\r\n                icon: \"check\",\r\n                iconColor: 'text-green-500'\r\n            },\r\n            {\r\n                name: 'Comments',\r\n                icon: \"check\",\r\n                iconColor: 'text-orange-500'\r\n            },\r\n            {\r\n                name: 'Notifications',\r\n                icon: \"check\",\r\n                iconColor: 'text-teal-500'\r\n            },\r\n            {\r\n                name: 'Text Editor',\r\n                icon: \"check\",\r\n                iconColor: 'text-blue-500'\r\n            },\r\n            {\r\n                name: 'Sync Datastore',\r\n                icon: \"check\",\r\n                iconColor: 'text-zinc-500'\r\n            }\r\n        ],\r\n    }\r\n];\r\n",
      "type": "registry:lib",
      "target": "lib/billingsdk-config.ts"
    }
  ]
}